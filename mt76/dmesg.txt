
[  191.736257] pci.c - mt7902_pci_probe starting the mt7902 driver from the pci probe function. This is the first function to display in dmesg  ============================================================================================================================================================================================
[  191.736274] mt7902_pci 0000:03:00.0: enabling device (0000 -> 0002)
[  191.736390] pci.c - mt7902_pci_probe pcim_enable_device->ret : 0
[  191.736412] pci.c - mt7902_pci_probe pcim_iomap_regions(pdev, 1, 0000:03:00.0)->ret : 0
[  191.736413] pci.c - mt7902_pci_probe - pci_read_config_word(pdev, 4, 0xfdd371e);
[  191.736498] pci.c - mt7902_pci_probe pci_alloc_irq_vectors->ret : 1
[  191.736500] pci.c - mt7902_pci_probe dma_set_mask(pdev, 0xffffffff)->ret: 0
[  191.736502] pci.c - mt7902_pci_probe mt7902_disable_aspm: 0
[  191.736503] mt792x_core.c - mt792x_get_mac80211_ops
[  191.736510] mt792x_core.c - mt792x_get_offload_capability(dev, mediatek/WIFI_RAM_CODE_MT7922_1.bin)
[  191.740871] mt792x_core.c - mt792x_get_offload_capability - request_firmware->ret:0
[  191.740875] mt792x_core.c - mt792x_get_offload_capability - check firmware error
[  191.740876] mt792x_core.c - mt792x_get_offload_capability - while(data:0x11be1874 < end:0x11be18e0)
[  191.740878] mt792x_core.c - mt792x_get_offload_capability - while(data:0x11be1878 < end:0x11be18e0)
[  191.740880] mt792x_core.c - mt792x_get_offload_capability - while(data:0x11be1878 < end:0x11be18e0)
[  191.740881] mt792x_core.c - mt792x_get_offload_capability - while(data:0x11be18d0 < end:0x11be18e0)
[  191.740883] mt792x_core.c - mt792x_get_offload_capability - MT792x_FW_TAG_FEATURE: 0x4
[  191.740884] mt792x_core.c - mt792x_get_offload_capability - release_firmware
[  191.740919] pci.c - mt7902_pci_probe mt792x_get_mac80211_ops: 0
[  191.740921] mt76_mac80211.c - mt76_alloc_device
[  191.740945] pci.c - mt7902_pci_probe mt76_alloc_device: 0
[  191.740947] pci.c - mt7902_pci_probe pci_set_drvdata
[  191.740948] pci.c - mt7902_pci_probe mt76_mmio_init
[  191.740950] mt76_mmio.c - mt76_mmio_init
[  191.740951] pci.c - mt7902_pci_probe devm_kmemdup
[  191.740953] pci.c - mt7902_pci_probe devm_kmemdup: 0
[  191.740966] pci.c - mt7902_pci_probe - rev - 0x7902  - 0x70010200
[  191.740974] pci.c - mt7902_pci_probe - rev - 0x0  - 0x70010204
[  191.740989] mt7902_pci 0000:03:00.0: ASIC revision: 79020000
[  191.740992] mt792x_dma.c - mt792x_wfsys_reset
[  191.740993] mt792x_dma.c - mt792x_wfsys_reset - mt76_clear(dev, 0x18000140, 0x1)
[  191.741000] pci.c - __mt7902_reg_addr - mt7902_reg_map_l1(dev, 0x18000140)->0x18000140
[  191.792778] mt792x_dma.c - mt792x_wfsys_reset - mt76_set(dev, 0x18000140, 0x1)
[  191.792805] pci.c - __mt7902_reg_addr - mt7902_reg_map_l1(dev, 0x18000140)->0x18000140
[  191.792819] mt792x_dma.c - mt792x_wfsys_reset - __mt76_poll_msec(&dev->mt76, 0x18000140, 0x10, 0x10, 500)
[  191.792825] mt76_util.c - ____mt76_poll_msec(struct mt76_dev *dev, 0x18000140, 0x10, 0x10, 500, 10)
[  191.792836] pci.c - __mt7902_reg_addr - mt7902_reg_map_l1(dev, 0x18000140)->0x18000140
[  191.813093] pci.c - __mt7902_reg_addr - mt7902_reg_map_l1(dev, 0x18000140)->0x18000140
[  191.813115] pci.c - mt7902_pci_probe mt792x_wfsys_reset->ret: 0
[  191.813119] pci.c - mt7902_pci_probe 	mt76_wr(dev, 0xd4204, 0)
[  191.813125] pci.c - mt7902_pci_probe mt76_wr(dev, 0x10188, 0xff)
[  191.813208] pci.c - mt7902_pci_probe devm_request_irq->ret: 0
[  191.813212] pci.c - mt7902_dma_init(struct mt792x_dev *dev)
[  191.813216] mt76_dma.c - mt76_dma_attach
[  191.813220] mt792x_dma.c - mt792x_dma_disable
[  191.813223] mt792x_dma.c - mt792x_dma_disable - 	mt76_clear(dev, 0xd4208, 0x18208005)
[  191.813230] mt792x_dma.c - mt792x_dma_disable - mt76_poll_msec_tick(dev, 0xd4208, 0xa, 0x0, 0x64, 0x1)
[  191.813236] mt76_util.c - ____mt76_poll_msec(struct mt76_dev *dev, 0xd4208, 0xa, 0x0, 100, 1)
[  191.813244] mt792x_dma.c - mt792x_dma_disable - mt76_clear(dev, 0xd42b0, 0x40)
[  191.813251] mt792x_dma.c - mt792x_dma_disable - mt76_set(dev, 0x7c026004, 0x10000000)
[  191.813256] pci.c - __mt7902_reg_addr(struct mt792x_dev *dev, 0x7c026004) - fixed_map[16].phys: 0x7c020000, fixed_map[16].maps: 0xd0000, fixed_map[16].size: 0x10000, ofs: 0x6004, return:0xd6004
[  191.813272] pci.c - mt7902_dma_init - mt792x_dma_disable(dev, true)->ret: 0
[  191.813276] mt76_connac_mac - mt76_connac_init_tx_queues
[  191.813279] mt76_mac80211.c - mt76_init_queue(struct mt76_dev *dev, 0, 0, 2048, 869120, 0x0)
[  191.813287] mt76_mac80211.c - mt76_init_queue - queue_ops(dev, hwq, idx, n_desc, 0, ring_base)
[  191.813291] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:0, int n_desc:2048, int bufsize:0, u32 ring_base:0xd4300)
[  191.813356] mt76_mac80211.c - mt76_create_page_pool - q:-824157528
[  191.813360] mt76_mac80211.c - mt76_create_page_pool - idx: -33568472
[  191.813364] mt76_mac80211.c - mt76_create_page_pool - pool_size: 16
[  191.813368] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813388] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813391] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813395] mt76_dma.c - mt76_dma_queue_reset
[  191.813399] mt76_dma.c - __mt76_dma_queue_reset
[  191.813410] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813416] mt76_mac80211.c - mt76_init_queue - return
[  191.813419] pci.c - mt7902_dma_init - mt76_connac_init_tx_queues(dev->phy.mt76, 0x0, 0x800, 0xd4300, NULL, 0)->ret: 0  (init tx queue)
[  191.813425] pci.c - mt7902_dma_init - mt76_wr(dev, 0xd4600, 0x4);
[  191.813428] mt76_mac80211.c - mt76_init_queue(struct mt76_dev *dev, 0, 17, 256, 869120, 0x0)
[  191.813433] mt76_mac80211.c - mt76_init_queue - queue_ops(dev, hwq, idx, n_desc, 0, ring_base)
[  191.813435] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:17, int n_desc:256, int bufsize:0, u32 ring_base:0xd4300)
[  191.813480] mt76_mac80211.c - mt76_create_page_pool - q:-824159832
[  191.813482] mt76_mac80211.c - mt76_create_page_pool - idx: 579998264
[  191.813485] mt76_mac80211.c - mt76_create_page_pool - pool_size: 16
[  191.813486] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813493] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813494] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813496] mt76_dma.c - mt76_dma_queue_reset
[  191.813498] mt76_dma.c - __mt76_dma_queue_reset
[  191.813501] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813506] mt76_mac80211.c - mt76_init_queue - return
[  191.813508] pci.c - mt7902_dma_init - mt76_init_mcu_queue(&dev->mt76, 0x0, 0x11, 0x100, 0xd4300);->ret: 0  (command to WM)
[  191.813512] mt76_mac80211.c - mt76_init_queue(struct mt76_dev *dev, 2, 16, 128, 869120, 0x0)
[  191.813516] mt76_mac80211.c - mt76_init_queue - queue_ops(dev, hwq, idx, n_desc, 0, ring_base)
[  191.813518] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:16, int n_desc:128, int bufsize:0, u32 ring_base:0xd4300)
[  191.813529] mt76_mac80211.c - mt76_create_page_pool - q:-824160024
[  191.813531] mt76_mac80211.c - mt76_create_page_pool - idx: -1874268764
[  191.813534] mt76_mac80211.c - mt76_create_page_pool - pool_size: 16
[  191.813536] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813541] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813543] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813546] mt76_dma.c - mt76_dma_queue_reset
[  191.813548] mt76_dma.c - __mt76_dma_queue_reset
[  191.813551] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813556] mt76_mac80211.c - mt76_init_queue - return
[  191.813558] pci.c - mt7902_dma_init - mt76_init_mcu_queue(&dev->mt76, 0x2, 0x10, 0x80, 0xd4300)->ret: 0  (firmware download)
[  191.813562] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:0, int n_desc:8, int bufsize:2048, u32 ring_base:0xd4500)
[  191.813571] mt76_mac80211.c - mt76_create_page_pool - q:-1359455856
[  191.813583] mt76_mac80211.c - mt76_create_page_pool - idx: 1
[  191.813585] mt76_mac80211.c - mt76_create_page_pool - pool_size: 16
[  191.813587] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813597] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813599] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813602] mt76_dma.c - mt76_dma_queue_reset
[  191.813603] mt76_dma.c - __mt76_dma_queue_reset
[  191.813606] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813610] pci.c - mt7902_dma_init - mt76_queue_alloc(dev, &dev->mt76.q_rx[0x1], 0x0,  0x8, 0x800, 0xd4500)->ret: 0 (event from WM before firmware download)
[  191.813614] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:0, int n_desc:512, int bufsize:2048, u32 ring_base:0xd4540)
[  191.813628] mt76_mac80211.c - mt76_create_page_pool - q:-1359455744
[  191.813630] mt76_mac80211.c - mt76_create_page_pool - idx: 2
[  191.813632] mt76_mac80211.c - mt76_create_page_pool - pool_size: 16
[  191.813634] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813638] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813640] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813642] mt76_dma.c - mt76_dma_queue_reset
[  191.813644] mt76_dma.c - __mt76_dma_queue_reset
[  191.813647] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813651] pci.c - mt7902_dma_init - mt76_queue_alloc(dev, &dev->mt76.q_rx[0x2], 0x0, 0x200, 0x800, 0xd4540)->ret: 0 /* Change mcu queue after firmware download */
[  191.813655] mt76_dma.c - mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q, int idx:0, int n_desc:1536, int bufsize:2048, u32 ring_base:0xd4520)
[  191.813670] mt76_mac80211.c - mt76_create_page_pool - q:-1359455968
[  191.813672] mt76_mac80211.c - mt76_create_page_pool - idx: 0
[  191.813675] mt76_mac80211.c - mt76_create_page_pool - pool_size: 256
[  191.813677] mt76_mac80211.c - mt76_create_page_pool - mt76_is_mmio(dev)
[  191.813681] mt76_mac80211.c - mt76_create_page_pool - return
[  191.813683] mt76_dma.c - mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset:0)
[  191.813686] mt76_dma.c - mt76_dma_queue_reset
[  191.813688] mt76_dma.c - __mt76_dma_queue_reset
[  191.813691] mt76_dma.c - mt76_dma_sync_idx(struct mt76_dev *dev, struct mt76_queue *q)
[  191.813695] pci.c - mt7902_dma_init - mt76_queue_alloc(dev, &dev->mt76.q_rx[0x0], 0x0, 0x600, 0x800, 0xd4520)->ret: 0  /* rx data */     
[  191.813699] mt76_dma.c - mt76_dma_init(struct mt76_dev *dev, int (*poll)(struct napi_struct *napi, int budget))
[  191.813702] mt76_dma.c - mt76_dma_init - napi_dev.name:phy0, wiphy_name:phy0
[  191.813840] mt76_dma.c - mt76_dma_init - mt76_dma_rx_fill(dev, &dev->q_rx[0], false);
[  191.815268] mt76_dma.c - mt76_dma_kick_queue(struct mt76_dev *dev, struct mt76_queue *q)
[  191.815403] mt76_dma.c - mt76_dma_init - mt76_dma_rx_fill(dev, &dev->q_rx[1], false);
[  191.815491] mt76_dma.c - mt76_dma_kick_queue(struct mt76_dev *dev, struct mt76_queue *q)
[  191.815615] mt76_dma.c - mt76_dma_init - mt76_dma_rx_fill(dev, &dev->q_rx[2], false);
[  191.815967] mt76_dma.c - mt76_dma_kick_queue(struct mt76_dev *dev, struct mt76_queue *q)
[  191.815976] pci.c - mt7902_dma_init - mt76_init_queues(dev, mt792x_poll_rx)->ret: 0
[  191.815983] mt792x_dma.c - mt792x_dma_enable
[  191.815987] mt792x_dma.c - mt792x_dma_prefetch
[  191.815996] mt792x_dma.c - mt792x_dma_enable - mt76_wr(dev, 0xd420c, 0xffffffff)
[  191.816002] mt792x_dma.c - mt792x_dma_enable - mt76_wr(dev, 0xd42f0, 0x0)
[  191.816007] mt792x_dma.c - mt792x_dma_enable - mt76_set(dev, 0xd4208, 0x5020b870)
[  191.816014] mt792x_dma.c - mt792x_dma_enable - mt76_set(dev, 0xd4208, 0x5)
[  191.816020] mt792x_dma.c - mt792x_dma_enable - mt76_set(dev, 0x54000120, 0x2)
[  191.816025] pci.c - __mt7902_reg_addr(struct mt792x_dev *dev, 0x54000120) - fixed_map[11].phys: 0x54000000, fixed_map[11].maps: 0x2000, fixed_map[11].size: 0x1000, ofs: 0x120, return:0x2120
[  191.816037] mt792x_dma.c - mt792x_dma_enable - mt76_connac_irq_enable(mt76_dev , 0x2847fff5)
[  191.816042] mt76_mmio.c - mt76_set_irq_mask
[  191.816050] mt792x_dma.c - mt792x_dma_enable - mt76_set(dev, 0xd41f4, 0x1)
[  191.816057] pci.c - mt7902_pci_probe mt7902_dma_init->ret: 0
[  191.816061] init.c - mt7902_register_device(struct mt792x_dev *dev)
[  191.816065] mt792x_acpi_sar.c - mt792x_init_acpi_sar
[  191.816070] mt792x_acpi_sar.c - mt792x_asar_acpi_read_mtcl
[  191.816074] mt792x_acpi_sar.c - mt792x_acpi_read
[  191.816085] mt792x_acpi_sar.c - mt792x_asar_acpi_read_mtds
[  191.816089] mt792x_acpi_sar.c - mt792x_acpi_read
[  191.816094] mt792x_acpi_sar.c - mt792x_asar_acpi_read_mtgs
[  191.816097] mt792x_acpi_sar.c - mt792x_acpi_read
[  191.816102] mt792x_acpi_sar.c - mt792x_asar_acpi_read_mtfg
[  191.816106] mt792x_acpi_sar.c - mt792x_acpi_read
[  191.816111] mt792x_core.c - mt792x_init_wcid
[  191.816115] mt76_util.c - mt76_wcid_alloc(0x0, 14)
[  191.816120] mt792x_core.c - mt792x_init_wcid - idx:0
[  191.816124] mt792x_core.c - mt792x_init_wiphy
[  191.816127] mt792x_core.c - mt792x_init_wiphy - ieee80211_hw_set
[  191.816136] pci.c - mt7902_pci_probe mt7902_register_device->ret: 0
[  191.816451] mt792x_dma.c - mt792x_irq_tasklet(18446635529936576448)
[  191.816457] mt792x_dma.c - mt792x_irq_tasklet - mt76_wr(dev, 0xd4204, 0x0)
[  191.816465] mt792x_dma.c - mt792x_irq_tasklet - mt76_rr(dev, 0xd4200)->intr: 0x0
[  191.816469] mt792x_dma.c - mt792x_irq_tasklet - mt76_wr(dev, 0xd4200, 0x0)
[  191.816474] mt76_mmio.c - mt76_set_irq_mask
[  191.817096] init.c - mt7902_init_work(struct work_struct *work)
[  191.817099] init.c - mt7902_init_hardware(struct mt792x_dev *dev)
[  191.817101] init.c - __mt7902_init_hardware(struct mt792x_dev *dev)
[  191.817103] init.c - __mt7902_init_hardware - mt76_wr(dev, 0x41f23c, 0x0);
[  191.817105] pci.c - __mt7902_reg_addr(struct mt792x_dev *dev, 0x41f23c) - fixed_map[9].phys: 0x410000, fixed_map[9].maps: 0x90000, fixed_map[9].size: 0x10000, ofs: 0xf23c, return:0x9f23c
[  191.817110] pci_mcu.c - mt7902e_mcu_init(struct mt792x_dev *dev)
[  191.817112] pci_mcu.c - mt7902e_driver_own(struct mt792x_dev *dev)
[  191.817119] pci_mcu.c - mt7902e_driver_own - mt7902_reg_map_l1(dev, 0x18060010)-> reg : 0x40010
[  191.817122] pci_mcu.c - mt7902e_driver_own - mt76_wr(dev, 0x40010, 0x2)
[  191.817124] mt76_util.c - ____mt76_poll_msec(struct mt76_dev *dev, 0x40010, 0x1, 0x0, 500, 10)
[  191.817129] pci_mcu.c - mt7902e_mcu_init - mt7902e_driver_own(dev)->err: 0
[  191.817131] pci_mcu.c - mt7902e_mcu_init - mt76_rmw_field(dev, 0x10194, 0x100, 1)
[  191.817136] mcu.c - mt7902_run_firmware(struct mt792x_dev *dev)
[  191.817138] mcu.c - mt7902_run_firmware - chip_id : 0x7902
[  191.817140] mt792x_core.c - mt792x_load_firmware - mt792x_patch_name : mediatek/WIFI_MT7922_patch_mcu_1_1_hdr.bin
[  191.820188] mt7902_pci 0000:03:00.0: HW/SW Version: 0x8a108a10, Build Time: 20240219103244a
               , Size: 0x219a0
[  191.820203] mt76_connac_mcu - mt76_connac2_load_patch - loop 16777216
[  191.820207] mt76_connac_mcu - mt76_connac2_load_patch - mt76_connac2_get_data_mode(dev, 0x1000000) - addr: 0x900000, len: 0x21900, dl: 0x110e10a0
[  191.820213] mt76_connac_mcu - mt76_connac2_get_data_mode(dev, 0x1000000) ==> 0xffffffff
[  191.820218] mt76_connac_mcu - mt76_connac2_load_patch - mt76_connac_mcu_init_download(dev, 0x900000, 0x21900, 0x80000000)
[  191.820224] mt76_connac_mcu -  mt76_connac_mcu_init_download(struct mt76_dev *dev, u32 0x900000, u32 0x21900, u32 0x80000000)
[  191.820230] mt76_connac_mcu -  mt76_connac_mcu_init_download - if  1 && 0
[  191.820234] mt76_connac_mcu -  mt76_connac_mcu_init_download - mt76_mcu_send_msg(dev, 5, 0xf7c7cb4, 12, 1) - req->addr: 0x900000
[  191.820241] mt76_mcu.c - mt76_mcu_send_and_get_msg(struct mt76_dev *dev, cmd:5, data:0xf7c7cb4, len:12, wait_resp:1, struct sk_buff **ret_skb) 
[  191.820247] mt76_mcu.c - __mt76_mcu_msg_alloc(struct mt76_dev *dev, 0xf7c7cb4, 12, 12, gfp_t gfp)
[  191.820253] mt76_mcu.c - __mt76_mcu_msg_alloc - len: 76
[  191.820258] mt76_mcu.c - __mt76_mcu_msg_alloc - data: 0xf7c7cb4, data_len: 12
[  191.820263] mt76_mcu.c - __mt76_mcu_msg_alloc - skb_put_data - data: 0xf7c7cb4, data_len: 12
[  191.820267] mt76_mcu.c - __mt76_mcu_msg_alloc - data: 0xf7c7cb4, skb_queue_empty: 1
[  191.820271] mt76_mcu.c - mt76_mcu_send_and_get_msg - mt76_mcu_skb_send_and_get_msg(dev, skb, 5, 1, ret_skb)
[  191.820276] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg(struct mt76_dev *dev, struct sk_buff *skb, 5, 1, struct sk_buff **ret_skb)
[  191.820281] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - mutex_lock - skb_queue_empty:1
[  191.820285] pci_mcu.c - mt7902_mcu_send_message(struct mt76_dev *mdev, struct sk_buff *skb, 5, 0=)
[  191.820291] mt76_connac_mcu - mt76_connac2_mcu_fill_message(struct mt76_dev *dev, struct sk_buff *skb, 5, 0=)
[  191.820296] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x1
[  191.820299] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x1
[  191.820303] mt76_connac_mcu - mt76_connac2_mcu_fill_message - txd_len:64
[  191.820307] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x1, wait_seq:0xf7c7c2c
[  191.820311] pci_mcu.c - mt7902_mcu_send_message - mt76_connac2_mcu_fill_message->ret: 0
[  191.820315] pci_mcu.c - mt7902_mcu_send_message - tx_queue_skb_raw(mdev, mdev->q_mcu[0], skb, 0)
[  191.820320] mt76_dma.c - mt76_dma_tx_queue_skb_raw(struct mt76_dev *dev, struct mt76_queue *q, struct sk_buff *skb, 0x0)
[  191.820324] mt76_dma.c - mt76_dma_tx_queue_skb_raw - q-> (queued:0, ndesc:256), skb_queue_empty:1
[  191.820329] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_map_single(dev->dma_dev, 0xcf3a0000, 76=0x4c, 0x1)
[  191.820340] mt76_dma.c - mt76_dma_tx_queue_skb_raw - unlikely(dma_mapping_error(dev->dma_dev, 0xffba7000))-> 0
[  191.820345] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_add_buf(dev, 0xcee051a8, &buf, 1, 0x0, skb, NULL)
[  191.820349] mt76_dma.c - mt76_dma_add_buf - idx:0, next:0x1, buf0:0xffba7000, buf1:0x0
[  191.820355] mt76_dma.c - mt76_dma_add_buf - buf->  addr:0xffba7000, len:0x4c
[  191.820359] mt76_dma.c - mt76_dma_add_buf - idx:0
[  191.820363] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_kick_queue(dev, 0xcee051a8)
[  191.820367] mt76_dma.c - mt76_dma_kick_queue(struct mt76_dev *dev, struct mt76_queue *q)
[  191.820376] mt76_dma.c - mt76_dma_tx_queue_skb_raw - skb_queue_empty:1
[  191.820380] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - mcu_skb_send_msg->ret:0, skb_queue_empty:1, seq:0xf7c7c2c
[  191.820385] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - expires:4294862000
[  191.820389] mt76_mcu.c - mt76_mcu_get_response(struct mt76_dev *dev, 4294862000)
[  191.820393] mt76_mcu.c - mt76_mcu_get_response - timeout: 3000 - jiffies: 4294859000, skb_queue_empty: 1, - test_bit: 0, MT76_MCU_RESET: 0x9- phy.state: 0xaef81fd8 
[  194.833653] mt76_mcu.c - mt76_mcu_get_response - timeout: 18446744073709551600 - jiffies: 4294862016, skb_queue_empty: 1, - test_bit: 0, MT76_MCU_RESET: 0x9- phy.state: 0xaef81fd8 
[  194.833672] mt76_mcu.c - mt76_mcu_get_response - jiffies: 4294862016, skb_dequeue - phy.state: 0xaef81fd8
[  194.833678] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - skb:0
[  194.833682] mcu.c - mt7902_mcu_parse_response(struct mt76_dev *mdev, 5, struct sk_buff *skb, 1)
[  194.833690] mt7902_pci 0000:03:00.0: Message 00000005 (seq 1) timeout
[  194.833703] mt792x_mac.c - mt792x_reset(struct mt76_dev *mdev)
[  194.833707] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - dev->mcu_ops->mcu_parse_response(dev, 5, skb, 1)->ret: -110
[  194.833712] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - mutex_unlock
[  194.833717] mt7902_pci 0000:03:00.0: Download request failed
[  194.833725] mt76_connac_mcu - mt76_connac_mcu_patch_sem_ctrl(struct mt76_dev *dev, 0)
[  194.833729] mt76_connac_mcu - mt76_connac_mcu_patch_sem_ctrl - op: 0x0
[  194.833732] mt76_connac_mcu - mt76_connac_mcu_patch_sem_ctrl - mt76_mcu_send_msg(dev, 16, , 4, 1)
[  194.833738] mt76_mcu.c - mt76_mcu_send_and_get_msg(struct mt76_dev *dev, cmd:16, data:0xf7c7ccc, len:4, wait_resp:1, struct sk_buff **ret_skb) 
[  194.833744] mt76_mcu.c - __mt76_mcu_msg_alloc(struct mt76_dev *dev, 0xf7c7ccc, 4, 4, gfp_t gfp)
[  194.833749] mt76_mcu.c - __mt76_mcu_msg_alloc - len: 68
[  194.833756] mt76_mcu.c - __mt76_mcu_msg_alloc - data: 0xf7c7ccc, data_len: 4
[  194.833760] mt76_mcu.c - __mt76_mcu_msg_alloc - skb_put_data - data: 0xf7c7ccc, data_len: 4
[  194.833764] mt76_mcu.c - __mt76_mcu_msg_alloc - data: 0xf7c7ccc, skb_queue_empty: 1
[  194.833768] mt76_mcu.c - mt76_mcu_send_and_get_msg - mt76_mcu_skb_send_and_get_msg(dev, skb, 16, 1, ret_skb)
[  194.833773] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg(struct mt76_dev *dev, struct sk_buff *skb, 16, 1, struct sk_buff **ret_skb)
[  194.833778] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - mutex_lock - skb_queue_empty:1
[  194.833782] pci_mcu.c - mt7902_mcu_send_message(struct mt76_dev *mdev, struct sk_buff *skb, 16, 0=)
[  194.833787] mt76_connac_mcu - mt76_connac2_mcu_fill_message(struct mt76_dev *dev, struct sk_buff *skb, 16, 0=)
[  194.833792] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x2
[  194.833796] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x2
[  194.833799] mt76_connac_mcu - mt76_connac2_mcu_fill_message - txd_len:64
[  194.833803] mt76_connac_mcu - mt76_connac2_mcu_fill_message - seq: 0x2, wait_seq:0xf7c7c44
[  194.833807] pci_mcu.c - mt7902_mcu_send_message - mt76_connac2_mcu_fill_message->ret: 0
[  194.833811] pci_mcu.c - mt7902_mcu_send_message - tx_queue_skb_raw(mdev, mdev->q_mcu[0], skb, 0)
[  194.833815] mt76_dma.c - mt76_dma_tx_queue_skb_raw(struct mt76_dev *dev, struct mt76_queue *q, struct sk_buff *skb, 0x0)
[  194.833820] mt76_dma.c - mt76_dma_tx_queue_skb_raw - q-> (queued:1, ndesc:256), skb_queue_empty:1
[  194.833824] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_map_single(dev->dma_dev, 0xcf3a3200, 68=0x44, 0x1)
[  194.833840] mt76_dma.c - mt76_dma_tx_queue_skb_raw - unlikely(dma_mapping_error(dev->dma_dev, 0xffba6200))-> 0
[  194.833845] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_add_buf(dev, 0xcee051a8, &buf, 1, 0x0, skb, NULL)
[  194.833849] mt76_dma.c - mt76_dma_add_buf - idx:1, next:0x2, buf0:0xffba6200, buf1:0x0
[  194.833855] mt76_dma.c - mt76_dma_add_buf - buf->  addr:0xffba6200, len:0x44
[  194.833860] mt76_dma.c - mt76_dma_add_buf - idx:1
[  194.833864] mt76_dma.c - mt76_dma_tx_queue_skb_raw - dma_kick_queue(dev, 0xcee051a8)
[  194.833868] mt76_dma.c - mt76_dma_kick_queue(struct mt76_dev *dev, struct mt76_queue *q)
[  194.833877] mt76_dma.c - mt76_dma_tx_queue_skb_raw - skb_queue_empty:1
[  194.833880] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - mcu_skb_send_msg->ret:0, skb_queue_empty:1, seq:0xf7c7c44
[  194.833885] mt76_mcu.c - mt76_mcu_skb_send_and_get_msg - expires:4294865016
[  194.833889] mt76_mcu.c - mt76_mcu_get_response(struct mt76_dev *dev, 4294865016)


